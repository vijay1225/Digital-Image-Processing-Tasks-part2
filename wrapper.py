import numpy as np
import skimage.io as sk
from pathlib import Path
from matplotlib import pyplot
from skimage import exposure
from allfunctions import *


def problem1_a():
    lowlight_image1_path = Path('Data/Data/LowLight_1.png')
    lowlight_image2_path = Path('Data/Data/LowLight_2.png')
    lowlight_image1 = sk.imread(lowlight_image1_path)
    lowlight_image2 = sk.imread(lowlight_image2_path)
    stretched_lowlight_image1 = vijay_linear_stretch(lowlight_image1)
    stretched_lowlight_image2 = vijay_linear_stretch(lowlight_image2)
    pyplot.subplot(421)
    pyplot.imshow(lowlight_image1, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Original Low_light_1')
    pyplot.subplot(422)
    hist = exposure.histogram(lowlight_image1)
    pyplot.xlim(0, 255)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(423)
    pyplot.imshow(stretched_lowlight_image1, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Contrast Stretched Low_light_1')
    pyplot.subplot(424)
    hist = exposure.histogram(stretched_lowlight_image1)
    pyplot.xlim(0, 255)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(425)
    pyplot.imshow(lowlight_image2, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Original Low_light_image_2')
    pyplot.subplot(426)
    hist = exposure.histogram(lowlight_image2)
    pyplot.xlim(0, 255)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(427)
    pyplot.imshow(stretched_lowlight_image2, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Contrast Stretched Low_light_2')
    pyplot.subplot(428)
    hist = exposure.histogram(stretched_lowlight_image2)
    pyplot.xlim(0, 255)
    pyplot.bar(hist[1], hist[0])
    pyplot.show()


def problem1_b():
    lowlight_image1_path = Path('Data/Data/LowLight_1.png')
    lowlight_image2_path = Path('Data/Data/LowLight_2.png')
    hazy_image_path = Path('Data/Data/Hazy.png')
    lowlight_image1 = sk.imread(lowlight_image1_path)
    lowlight_image2 = sk.imread(lowlight_image2_path)
    hazy_image = sk.imread(hazy_image_path)
    stretched_lowlight_image1 = vijay_pow_stretch(lowlight_image1)
    stretched_lowlight_image2 = vijay_pow_stretch(lowlight_image2)
    stretched_hazy_image = vijay_pow_stretch(hazy_image)
    print("Contrast Stretching done plotting in 6x2 plots takes time wait ")
    pyplot.subplot(621)
    pyplot.imshow(lowlight_image1, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Original Low_light_1', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(622)
    hist = exposure.histogram(lowlight_image1)
    pyplot.xlim(0, 255)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(623)
    pyplot.imshow(stretched_lowlight_image1, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Contrast Stretched Low_light_1', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(624)
    hist = exposure.histogram(stretched_lowlight_image1)
    pyplot.xlim(0, 255)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(625)
    pyplot.imshow(lowlight_image2, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Original Low_light_image_2', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(626)
    hist = exposure.histogram(lowlight_image2)
    pyplot.xlim(0, 255)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(627)
    pyplot.imshow(stretched_lowlight_image2, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Contrast Stretched Low_light_2', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(628)
    hist = exposure.histogram(stretched_lowlight_image2)
    pyplot.xlim(0, 255)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(629)
    pyplot.imshow(hazy_image, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Original Hazy image', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(6, 2, 10)
    hist = exposure.histogram(hazy_image)
    pyplot.xlim(0, 255)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(6, 2, 11)
    pyplot.imshow(stretched_hazy_image, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Contrast Stretched Hazy', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(6, 2, 12)
    hist = exposure.histogram(stretched_hazy_image)
    pyplot.xlim(0, 255)
    pyplot.bar(hist[1], hist[0])
    pyplot.show()


def problem1_c():
    lowlight_image2_path = Path('Data/LowLight_2.png')
    hazy_image_path = Path('Data/Hazy.png')
    stone_face_image_path = Path('Data/StoneFace.png')
    lowlight_image3_path = Path('Data/LowLight_3.png')

    lowlight_image2 = sk.imread(lowlight_image2_path)
    hazy_image = sk.imread(hazy_image_path)
    stone_face_image = sk.imread(stone_face_image_path)
    lowlight_image3 = sk.imread(lowlight_image3_path)

    he_lowlight_image2 = vijay_histogram_equalization(lowlight_image2, clipping=False)
    print('Done histogram equalization to Low light image 2 ')
    he_lowlight_image3 = vijay_histogram_equalization(lowlight_image3, clipping=False)
    print('Done histogram equalization to Low light image 3 ')
    he_hazy_image = vijay_histogram_equalization(hazy_image, clipping=False)
    print('Done histogram equalization to Hazy image ')
    he_stone_face_image = vijay_histogram_equalization(stone_face_image, clipping=False)
    print('Done histogram equalization to Stone face image ')
    print("Histogram equalization done plotting in 8x2 plots takes time wait ")
    pyplot.subplot(821)
    pyplot.imshow(lowlight_image2, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Original Low_light_2', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(822)
    hist = exposure.histogram(lowlight_image2)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(823)
    pyplot.imshow(he_lowlight_image2, cmap='gray', vmin=0, vmax=255)
    pyplot.title('HE Low_light_2', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(824)
    hist = exposure.histogram(he_lowlight_image2)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(825)
    pyplot.imshow(lowlight_image3, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Original Low_light_image_3', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(826)
    hist = exposure.histogram(lowlight_image3)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(827)
    pyplot.imshow(he_lowlight_image3, cmap='gray', vmin=0, vmax=255)
    pyplot.title('HE Low_light_3', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(828)
    hist = exposure.histogram(he_lowlight_image3)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(829)
    pyplot.imshow(hazy_image, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Original Hazy image', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(8, 2, 10)
    hist = exposure.histogram(hazy_image)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(8, 2, 11)
    pyplot.imshow(he_hazy_image, cmap='gray', vmin=0, vmax=255)
    pyplot.title('HE Hazy', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(8, 2, 12)
    hist = exposure.histogram(he_hazy_image)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(8, 2, 13)
    pyplot.imshow(stone_face_image, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Original stone face image', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(8, 2, 14)
    hist = exposure.histogram(stone_face_image)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(8, 2, 15)
    pyplot.imshow(he_stone_face_image, cmap='gray', vmin=0, vmax=255)
    pyplot.title('HE stone face image', fontdict={'fontsize': 5}, loc='left')
    pyplot.subplot(8, 2, 16)
    hist = exposure.histogram(he_stone_face_image)
    pyplot.bar(hist[1], hist[0])
    pyplot.show()


def problem1_d():
    stone_face_image_path = Path('Data/StoneFace.png')
    stone_face_image = sk.imread(stone_face_image_path)
    [non_overlap_ahe_stone_face_image, overlap_ahe_stone_face_image] = vijay_clahe_equalization(stone_face_image)
    pyplot.subplot(221)
    pyplot.imshow(overlap_ahe_stone_face_image, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Block overlapped_clahe')
    pyplot.subplot(222)
    pyplot.xlim(0,255)
    hist = exposure.histogram(overlap_ahe_stone_face_image)
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(223)
    pyplot.imshow(non_overlap_ahe_stone_face_image, cmap='gray', vmin=0, vmax=255)
    pyplot.title('Block non overlapped clahe')
    pyplot.subplot(224)
    pyplot.xlim(0,255)
    hist = exposure.histogram(non_overlap_ahe_stone_face_image)
    pyplot.bar(hist[1], hist[0])
    pyplot.show()


def problem2():
    book_image_path = Path('Data/MathBooks.png')
    book_image = sk.imread(book_image_path)
    sat_book_image, linearly_stretch_image = vijay_rgb_contrast_stretch(book_image)
    pyplot.subplot(421)
    pyplot.imshow(linearly_stretch_image)
    pyplot.title('Liearly Stretch image')
    pyplot.subplot(423)
    hist = exposure.histogram(book_image[:, :, 0])
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(425)
    hist = exposure.histogram(book_image[:, :, 1])
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(427)
    hist = exposure.histogram(book_image[:, :, 2])
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(422)
    pyplot.imshow(sat_book_image)
    pyplot.title('Saturated linear stretch')
    pyplot.subplot(424)
    hist = exposure.histogram(sat_book_image[:, :, 0])
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(426)
    hist = exposure.histogram(sat_book_image[:, :, 1])
    pyplot.bar(hist[1], hist[0])
    pyplot.subplot(428)
    hist = exposure.histogram(sat_book_image[:, :, 2])
    pyplot.bar(hist[1], hist[0])
    pyplot.show()


def problem3():
    stone_face_image_path = Path('Data/StoneFace.png')
    stone_face_image = sk.imread(stone_face_image_path)
    original_shape = np.shape(stone_face_image)
    resized_stone_face_image = vijay_resizing_image(stone_face_image, resizing_factor=3)
    resized_shape = np.shape(resized_stone_face_image)
    pyplot.subplot(121)
    pyplot.imshow(resized_stone_face_image, cmap='gray')
    pyplot.title('Resized image')
    pyplot.subplot(122)
    pyplot.imshow(stone_face_image, cmap='gray')
    pyplot.title('Original size image')
    pyplot.show()


def problem4():
    input_image_path = Path('Data/StoneFace.png')
    input_image = sk.imread(input_image_path)
    rotated_image = vijay_rotate_image(input_image, degree=60 , interpolation_method='nearest')
    pyplot.subplot(121)
    pyplot.imshow(rotated_image, cmap='gray')
    pyplot.subplot(122)
    pyplot.imshow(input_image, cmap='gray')
    pyplot.show()

if __name__ == '__main__':
    # problem1_a()
    # problem1_b()
    # problem1_c()
    # problem1_d()
    problem2()
    # problem3()
    # problem4()
